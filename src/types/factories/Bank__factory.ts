/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Bank, BankInterface } from "../Bank";

const _abi = [
  {
    inputs: [],
    name: "checkBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "checkTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506104bb806100206000396000f3fe60806040526004361061003f5760003560e01c80632e1a7d4d14610044578063a511eb2c1461006d578063c71daccb14610098578063d0e30db0146100c3575b600080fd5b34801561005057600080fd5b5061006b600480360381019061006691906102db565b6100cd565b005b34801561007957600080fd5b50610082610206565b60405161008f9190610356565b60405180910390f35b3480156100a457600080fd5b506100ad610210565b6040516100ba9190610356565b60405180910390f35b6100cb610256565b005b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481111561014e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014590610336565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610194573d6000803e3d6000fd5b50806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546101e391906103d8565b9250508190555080600160008282546101fc91906103d8565b9250508190555050565b6000600154905090565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102a49190610382565b9250508190555034600160008282546102bd9190610382565b92505081905550565b6000813590506102d58161046e565b92915050565b6000602082840312156102ed57600080fd5b60006102fb848285016102c6565b91505092915050565b6000610311601083610371565b915061031c82610445565b602082019050919050565b6103308161040c565b82525050565b6000602082019050818103600083015261034f81610304565b9050919050565b600060208201905061036b6000830184610327565b92915050565b600082825260208201905092915050565b600061038d8261040c565b91506103988361040c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156103cd576103cc610416565b5b828201905092915050565b60006103e38261040c565b91506103ee8361040c565b92508282101561040157610400610416565b5b828203905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e6f7420456e6f756768206d6f6e657900000000000000000000000000000000600082015250565b6104778161040c565b811461048257600080fd5b5056fea2646970667358221220ed0ff68b9575f0dada84a7d8dd776627c5ecd09dec0cca53b8e4af861b7b695964736f6c63430008040033";

export class Bank__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Bank> {
    return super.deploy(overrides || {}) as Promise<Bank>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Bank {
    return super.attach(address) as Bank;
  }
  connect(signer: Signer): Bank__factory {
    return super.connect(signer) as Bank__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BankInterface {
    return new utils.Interface(_abi) as BankInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Bank {
    return new Contract(address, _abi, signerOrProvider) as Bank;
  }
}
